name: MacOS

on:
  push:
    branches:
      - trunk
      - main
  pull_request:
    branches:
      - trunk
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  build:
    strategy:
      matrix:
        include:
          # - os: "macos-13"
          - os: "macos-14"
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up C++20 
        uses: aminya/setup-cpp@v1
        with: 
          compiler: gcc-13
          cmake: true 
          ninja: true 
      
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache Cargo registry
        if: always() 
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('./Cargo.lock') }}
          path: ~/.cargo/registry
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache vcpkg registry
        if: always() 
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('./vcpkg*.json') }}
          path: build/vcpkg_installed/**/*
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: install dependencies
        run: |
          brew install pkg-config autoconf autoconf-archive automake coreutils libtool cmake ninja

      - name: Install rust dependencies
        run: |
          cargo install wasm-tools wit-bindgen-cli 

      - name: configure
        run: |
          cmake --preset linux-ninja-Debug

      - name: build
        run: |
          cmake --build --preset linux-ninja-Debug

      - name: test
        working-directory: build
        run: |
          ctest -VV 

      - name: Upload error logs
        if: ${{ failure() || cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-logs
          path: ./**/*.log
